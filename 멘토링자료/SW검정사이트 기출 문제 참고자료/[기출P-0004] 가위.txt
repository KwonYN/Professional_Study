import java.io.*;
import java.util.*;
 
public class Solution {
    public static int TC, N, K, cp[], min, max, left, mid, right, cutCnt;
    public static void main(String[] args) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
         
        TC = Integer.parseInt(br.readLine());
        for (int i = 1; i <= TC; i++) {
            st = new StringTokenizer(br.readLine());
            N = Integer.parseInt(st.nextToken());
            K = Integer.parseInt(st.nextToken());
            min = Integer.MAX_VALUE; max = Integer.MIN_VALUE; cutCnt = 0; mid = 0;
            cp = new int[N];    
            st = new StringTokenizer(br.readLine());
            for (int j = 0; j < N; j++) {
                cp[j] = Integer.parseInt(st.nextToken());
                min = Math.min(min, cp[j]);
                max = Math.max(max, cp[j]);
            }
            left = 0;
            right = max - min;
            while(left <= right) {
                mid = (left + right)/2;
                cutCnt = 0;
                min = Integer.MAX_VALUE;
                max = Integer.MIN_VALUE;
                for (int k = 0; k < cp.length; k++) {
                    min = Math.min(min, cp[k]); max = Math.max(max, cp[k]);
                    if(Math.abs(max - min) > mid) {
                        cutCnt++;
                        min = cp[k]; max = cp[k];
                    }
                }
                if(cutCnt > K) left = mid + 1;
                else right = mid- 1;
            }
            if(left != 0 && cutCnt > K) mid++;
            System.out.println("#" + i + " " + mid);
        }
    }
}

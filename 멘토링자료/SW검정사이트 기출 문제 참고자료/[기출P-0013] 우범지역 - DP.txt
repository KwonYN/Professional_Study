import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.Scanner;
 
class Solution {
 
    public static int arr[][] = new int[100001][2];
    public static int chk[] = new int[100001];
    public static int dots[] = new int[100001];
    public static int dp[][] = new int[101][100001];
    public static int tc;
    public static int a, b, n = 0, k = 0;
    public static long sum;
 
    public static void main(String[] args) throws Exception {
 
        //System.setIn(new FileInputStream("C:\\Users\\mh21.ahn\\Desktop\\sample_input.txt"));
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine());
 
        tc = Integer.parseInt(st.nextToken());
 
        for (int t = 1; t <= tc; t++) {
            st = new StringTokenizer(br.readLine());
            n = Integer.parseInt(st.nextToken());
            k = Integer.parseInt(st.nextToken());
 
            for (int i = 1; i < n; i++) {
                st = new StringTokenizer(br.readLine());
                arr[i][0] = Integer.parseInt(st.nextToken());
                arr[i][1] = Integer.parseInt(st.nextToken());
            }
 
            st = new StringTokenizer(br.readLine());
            for (int i = 1; i <= n; i++) {
                chk[i] = Integer.parseInt(st.nextToken());
                dp[1][i] = chk[i];
                dp[0][i] = chk[i];
                dots[i] = 0;
            }
 
            // dp[시간][교차로]
            for (int i = 1; i < n; i++) {
                a = arr[i][0];
                b = arr[i][1];
                dots[a]++;
                dots[b]++;
                dp[1][a] = dp[1][a] + dp[0][b];
                dp[1][b] = dp[1][b] + dp[0][a];
            }
 
            for (int j = 2; j <= k; j++) {
 
                for (int i = 1; i <= n; i++) {
                    dp[j][i] = 0;
                }
 
                for (int i = 1; i < n; i++) {
                    a = arr[i][0];
                    b = arr[i][1];
                    dp[j][a] = dp[j][a] + dp[j - 1][b];
                    dp[j][b] = dp[j][b] + dp[j - 1][a];
                }
 
                for (int i = 1; i <= n; i++) {
                    dp[j][i] = dp[j][i] - dp[j - 2][i] * (dots[i] - 1);
                }
            }
            sum = 0;
            for (int i = 1; i <= n; i++) {
                sum = sum + (long) dp[k][i];
            }
            bw.write("#" + t + " " + sum);
            bw.newLine();
            bw.flush();
        }
    }
}
